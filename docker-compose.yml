# 운영용 docker-compose.yml
services:
  mlops-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: your-registry/mlops-app:latest
    container_name: mlops-production
    environment:
      - PYTHONPATH=/app/src
      - ENV=production
    volumes:
      - ./data:/app/data:ro  # 읽기 전용으로 데이터 마운트
      - ./logs:/app/logs
      - ./models:/app/models
    ports:
      - "8000:8000"  # 필요시 포트 노출
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
    
  # 모델 학습용 서비스 (필요시)
  training:
    build:
      context: .
      dockerfile: Dockerfile
    image: your-registry/mlops-app:latest
    environment:
      - PYTHONPATH=/app/src
      - ENV=production
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    command: ["python", "src/training/train.py"]  # 실제 학습 스크립트
    
  # 배치 예측용 서비스 (필요시)  
  prediction:
    build:
      context: .
      dockerfile: Dockerfile
    image: your-registry/mlops-app:latest
    environment:
      - PYTHONPATH=/app/src
      - ENV=production
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    command: ["python", "src/prediction/predict.py"]  # 실제 예측 스크립트